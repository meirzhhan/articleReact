import { Article } from '@/entities/Article';
import { rtkApi } from '@/shared/api/rtkApi';

/**
 * API для получения статьей для листа рекомендаций
 */
const recommendationsApi = rtkApi.injectEndpoints({
  endpoints: (build) => ({
    /**
     * Получение статьей по лимиту
     *
     * @param limit Limit parameter for the query
     * @returns Query object for the endpoint
     */
    getArticleRecommendationsList: build.query<Article[], number>({
      query: (limit) => ({
        url: '/articles',
        params: {
          _limit: limit,
          _expand: 'user', // Расширяет ответ, включив в него пользовательские данные
        },
      }),
    }),
  }),
});

/**
 * Хук для получения списка рекомендаций по статьям.
 */
export const useArticleRecommendationsList =
  recommendationsApi.useGetArticleRecommendationsListQuery; // hook generated by RTK query
